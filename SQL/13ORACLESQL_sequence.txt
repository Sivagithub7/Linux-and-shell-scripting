
SEQUENCE:
==========
- IT IS A DB OBJECT WHICH IS USED TO GENERATE SEQUENCE NUMBERS ON
A PARTICULAR COLUMN AUTOMATICALLY.
- IT WILL PROVIDE "AUTO INCREMENTAL VALUE" FACILITY ON A TABLE.

SYNTAX:
========
CREATE SEQUENCE <SEQUENCE NAME>
[START WITH n]
[MINVALUE n]
[INCREMENT BY n]
[MAXVALUE n]
[NO CYCLE / CYCLE]
[NO CACHE / CACHE n];

START WITH n:
=============
- IT SPECIFY THE STARTING SEQUENCE NUMBER.HERE "n" - NUMBER.

EX:
SQL> CREATE SEQUENCE SQ1 START WITH 100;

Sequence created.

SQL> SELECT SQ1 FROM DUAL;
SELECT SQ1 FROM DUAL
       *
ERROR at line 1:
ORA-00904: "SQ1": invalid identifier


SQL> SELECT SQ1.NEXTVAL FROM DUAL;

   NEXTVAL
----------
       100

SQL> SELECT SQ1.NEXTVAL FROM DUAL;

   NEXTVAL
----------
       101

SQL> SELECT SQ1.NEXTVAL FROM DUAL;

   NEXTVAL
----------
       102
	   
EX : IF NOT GIVEN START WITH THEN IT WILL TAKE DEFAULT VALUE WHICH IS STARTED FROM 1.

SQL> CREATE SEQUENCE SQ;

Sequence created.

SQL> SELECT SQ.NEXTVAL FROM DUAL;

   NEXTVAL
----------
         1

SQL> SELECT SQ.NEXTVAL FROM DUAL;

   NEXTVAL
----------
         2
		 
INCREMENT BY n:
===============
- IT SPECIFY THE INCREMENTAL VALUE IN BETWEEN SEQUENCE NUMBERS.
HERE "n" - NUMBER.
EX:
SQL> CREATE SEQUENCE SQ2 START WITH 100
  2  INCREMENT BY 5;

		 
MINVALUE n:
===========
- IT SHOW MINIMUM SEQUENCE NUMBER.HERE "n" NUMBER.


EX:
SQL> CREATE SEQUENCE SQ2 START WITH 100
  2  INCREMENT BY 5;
  
  O/P : 105,  110,  115 ...
  
MAXVALUE n:
===========
- IT SHOW MAXIMUM VALUE IN THE SEQUENCE.HERE "n" - NUMBER.

EX: 
SQL> CREATE SEQUENCE SQ3 START WITH 100
  2  INCREMENT BY 2
  3  MAXVALUE 106;

Sequence created.

SQL> SELECT SQ3.NEXTVAL FROM DUAL;

   NEXTVAL
----------
       100

SQL> SELECT SQ3.NEXTVAL FROM DUAL;

   NEXTVAL
----------
       102

SQL> SELECT SQ3.NEXTVAL FROM DUAL;

   NEXTVAL
----------
       104

SQL> SELECT SQ3.NEXTVAL FROM DUAL;

   NEXTVAL
----------
       106

SQL> SELECT SQ3.NEXTVAL FROM DUAL;
SELECT SQ3.NEXTVAL FROM DUAL
*
ERROR at line 1:
ORA-08004: sequence SQ3.NEXTVAL exceeds MAXVALUE and cannot be instantiated


NO CYCLE:
==========
- IT IS DEFAULT PARAMETER OF A SEQUENCE OBJECT.
- WHEN WE CREATE A SEQUENCE OBJECT WITH "NO CYCLE" PARAMETER THEN
THE SET OF SEQUENCE NUMBERS ARE NOT REPEATED.
EX:
START WITH 1
MINVALUE 1
INCREMENT BY 1
MAXVALUE 3;
OUTPUT:
=========
1
2
3---------SEQ.STOP
CYCLE:
======
- WHEN WE CREATE A SEQUENCE OBJECT WITH "CYCLE" PARAMETER THEN
THE SET OF SEQUENCE NUMBERS ARE REPEATED AGAIN AND AGAIN.
EX:
START WITH 1
MINVALUE 1
INCREMENT BY 1
MAXVALUE 3
CYCLE;
OUTPUT:
=========
1
2
3------CYCLE COMPLETED
1
2
3
1
2
3
NO CACHE:
==========
- CACHE IS NOTHING TEMPORARY FILE(MEMORY).
- IT IS A DEFAULT PARAMETER OF SEQUENCE OBJECT.
- WHEN WE CREATE A SEQUENCE OBJECT WITH "NO CACHE" THEN THE SET OF
SEQUENCE NUMBERS ARE SAVED IN DATABASE DIRECTLY SO THAT WHENEVER USER
WANT
TO ACCESS DATA FROM A TABLE BASED ON SEQUENCE NUMBERS THEN EACH AND
EVERY
USER REQUEST WILL GO TO DATABASE SO THAT THE NO.OF USER REQUESTS ARE
INCRESED
THE BURDON ON DATABASE AND REDUCE THE PERFORMANCE OF DATABASE.
CACHE n:
========
- WHEN WE CREATE A SEQUENCE OBJECT WITH "CACHE" THEN THE SET OF
SEQUENCE NUMBERS ARE SAVED IN DATABASE AND ALSO THE COPY OF SEQUENCE
NUMBERS ARE SAVED IN CACHE MEMORY.SO THAT WHENEVER USER WANT TO
ACCESS
DATA FROM A TABLE BASED ON SEQUENCE NUMBERS THEN EACH AND EVERY
USER REQUEST WILL GO TO CACHE MEMORY INSTEAD OF DATABASE SO THAT
THE NO.OF USER REQUESTS ARE REDUCE AND DECRESED THE BURDON ON
DATABASE
AND IMPROVE THE PERFORMANCE OF DATABASE.HERE "n" IS REPRESENT THE SIZE
OF
CACHE FILE MINIMUM SIZE IS 2KB AND MAXIMUM IS DEPENDS ON RAM MEMORY.

NOTE:
=====
- WHEN WE WORK ON SEQUECNE OBJECT THEN WE FOLLOW THE FOLLOWING
TWO PSEUDO COLUMNS ARE,
i) NEXTVAL : TO GENERATE SEQUENCE NUMBERS NEXT BY NEXT.
ii) CURRVAL : IT SHOWS THE CURRENT SEQUENCE NUMBERS
EX:
1
2
3
4
5 -------> NEXTVAL = 6 , CURRVAL = 5

EX1:
SQL> CREATE SEQUENCE SQ1
2 START WITH 1
3 MINVALUE 1
4 INCREMENT BY 1
5 MAXVALUE 3;
Sequence created.
TESTING:
SQL> CREATE TABLE TEST1(SNO INT,NAME VARCHAR2(10));
Table created.
SQL> INSERT INTO TEST1 VALUES(SQ1.NEXTVAL,'&NAME');
Enter value for name: A
/
Enter value for name: B
/
Enter value for name: C
/
Enter value for name: D
ERROR at line 1:
ORA-08004: sequence SQ1.NEXTVAL exceeds MAXVALUE and cannot be instantiated

ALTERING A SEQUENCE:
=====================
SYNTAX:
=======
ALTER SEQUENCE <SEQUENCE NAME> <PARAMETER NAME> n;
EX:
SQL> ALTER SEQUENCE SQ1 MAXVALUE 5;
Sequence altered.
SQL> INSERT INTO TEST1 VALUES(SQ1.NEXTVAL,'&NAME');
Enter value for name: D
/
Enter value for name: E
SQL> SELECT * FROM TEST1;
SNO NAME
---------- ----------
1 A
2 B
3 C
4 D
5 E
EX2:
SQL> CREATE SEQUENCE SQ2
2 START WITH 1
3 MINVALUE 1
4 INCREMENT BY 1
5 MAXVALUE 3
6 CYCLE
7 CACHE 2;
Sequence created.
TESTING:
SQL> CREATE TABLE TEST2(SNO INT,NAME VARCHAR2(10));
Table created.
SQL> INSERT INTO TEST2 VALUES(SQ2.NEXTVAL,'&NAME');
Enter value for name: A
/
Enter value for name: B
/
Enter value for name: C
/
......................................
SQL> SELECT * FROM TEST2;
SNO NAME
---------- ----------
1 A
2 B
3 C
1 M
2 N
3 O
EX3:
SQL> CREATE SEQUENCE SQ3
2 START WITH 3
3 MINVALUE 1
4 INCREMENT BY 1
5 MAXVALUE 5
6 CYCLE
7 CACHE 2;
Sequence created.
SQL> CREATE TABLE TEST3(SNO INT,NAME VARCHAR2(10));
Table created.
SQL> INSERT INTO TEST3 VALUES(SQ3.NEXTVAL,'&NAME');
Enter value for name: A
/
....................................
SQL> SELECT * FROM TEST3;
SNO NAME
---------- ----------
3 A
4 B
5 C
1 Q
2 W
3 E
4 R
5 T
NOTE:
=====
- TO VIEW ALL SEQUENCE OBJECTS IN ORACLE DB THEN WE USE A
DATADICTIONARY IS "USER_SEQUENCES".
EX:
SQL> DESC USER_SEQUENCES;
SQL> SELECT SEQUENCE_NAME FROM USER_SEQUENCES;
HOW TO DROP A SEQUENCE:
=========================
SYNTAX:
========
DROP SEQUENCE <SEQUENCE NAME>;
EX:
DROP SEQUENCE SQ1;
========================================================================



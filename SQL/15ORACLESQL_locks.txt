LOCKS:
=======
- TO PREVENT UNAUTHORIZED USERS TO ACCESS OUR RESOURCE.
1. ROW LEVEL LOCKS
2. TABLE LEVEL LOCKS

1. ROW LEVEL LOCKS:
===================
i) SINGLE ROW LOCKING
ii) MULTIPLE ROWS LOCKING

i) SINGLE ROW LOCKING :
=======================
- IN THIS MECHANISM WE CAN LOCK A SPECIFIC ROW IN A TABLE.

ex:
USER1:

SQL> CONN SYSTEM/TIGER
SQL> UPDATE MYDB9AM.EMP SET SAL=1100 WHERE EMPNO=7788;
[ ROW IS LOCKED] 

SQL> COMMIT/ROLLBACK; 
[ FOR RELEASING LOCK ]

USER2:
SQL> CONN MYDB9AM/MYDB9AM

SQL> UPDATE EMP SET SAL=2200 WHERE EMPNO=7788;
[WE CANNOT PERFORM UPDATE OPERATION]

1 ROW UPDATED.

ii) MULTIPLE ROWS LOCKING:
==========================
- WHEN WE LOCK MULTIPLE ROWS IN A TABLE WE SHOULD USE "FOR UPDATE"
CLAUSE IN SELECT QUERY

ex:
USER1:

SQL> CONN SYSTEM/TIGER
SQL> SELECT * FROM MYDB9AM.EMP WHERE DEPTNO=10 FOR UPDATE; 
[ROWS ARE LOCKED] 
SQL> COMMIT/ROLLBACK;
[ FOR RELEASING LOCK ]

USER2:
SQL> CONN MYDB9AM/MYDB9AM

SQL> UPDATE EMP SET SAL=2200 WHERE DEPTNO=10;

[WE CANNOT PERFORM UPDATE OPERATION]
3 ROWS UPDATED

DEAD LOCK:
===========
- BOTH USERS REQUESTS ARE WAITING TO EACH OTHER FOR THEIR
RESOURCES.
EX:

USER1:
SQL> CONN SYSTEM/TIGER
SQL> UPDATE MYDB9AM.EMP SET SAL=1100 WHERE EMPNO=7369;
[ ROW WAS LOCK ]

SQL> UPDATE MYDB9AM.EMP SET SAL=3300 WHERE EMPNO=7788; 
[ WE CANNOT PERFORM UPDATE OPERATION]

ERROR:
DEAD LOCK DETECTED FOR WAITING
RESOURCES

SQL> COMMIT / ROLLBACK;
[ DEAD LOCK RELEASE]

USER2:

SQL> CONN MYDB9AM/MYDB9AM

SQL> UPDATE EMP SET SAL=2200 WHERE EMPNO=7788;
[ ROW WAS LOCK ]

SQL> UPDATE EMP SET SAL=4400 WHERE EMPNO=7369;
[ WE CANNOT PERFORM UPDATE OPERATION]

1 ROW UPDATED.

2. TABLE LEVEL LOCKS:
=====================
- WE CAN LOCK THE ENTIRE TABLE(ALL ROWS).
I) SHARE LOCK
II) EXCLUSIVE LOCK

I) SHARE LOCK:
=============
- BOTH USERS CAN LOCK A TABLE.
SYNTAX:
=======
LOCK TABLE <TN> IN SHARE MODE;
EX:
======= ========
SQL> CONN SYSTEM/TIGER
SQL> LOCK TABLE MYDB9AM.EMP IN SHARE MODE;
Table(s) Locked. 

SQL> COMMIT / ROLLBACK; 
[ FOR RELEASING LOCK ]

USER2:
SQL> CONN MYDB9AM/MYDB9AM

SQL> LOCK TABLE EMP IN SHARE MODE;
Table(s) Locked
SQL> COMMIT/ROLLBACK;
[ FOR RELEASING LOCK]

II) EXCLUSIVE LOCK:
==================
- ANY ONE USER CAN LOCK A TABLE.
SYNTAX:
========
LOCK TABLE <TN> IN EXCLUSIVE MODE;
EX:

USER1:
SQL> CONN SYSTEM/TIGER
SQL> LOCK TABLE MYDB9AM.EMP IN EXCLUSIVE MODE; 
Table(s) Locked.

SQL> COMMIT / ROLLBACK; 
[ FOR RELEASING LOCK ]

USER2:
SQL> CONN MYDB9AM/MYDB9AM
SQL> LOCK TABLE EMP IN EXCLUSIVE MODE;
[ WE CANNOT LOCK TABLE ]

Table(s) Locked.





Data types: Used to define the type of a variable
--It defines what type of data we are going to store in a variable.

1) Numeric
 - integer: To store integers
 ex: 25,-6,98

 - Float: To store numberswith decimal
 ex: 3,17,9.2
 
  - Complex: To store numbers with real and imaginary part
  eg:4+7j
  
2) Boolean: To store result of expressions with results in  either true or false

3) Sequential: 
 - strings
 - tuples
 - lists
 
4) Sets

5) Dictionaries

1) Lists: Used to store a variety of data items, ranging from integers to strings and even another lists

ex:
nums(12,14,76,93)
Traceback (most recent call last):
  File "<pyshell#67>", line 1, in <module>
    nums(12,14,76,93)
NameError: name 'nums' is not defined

num=[12,74,82,29]
num
[12, 74, 82, 29]
num[-1]
29

-- add float value
here, append=add (add value in last)

num.append(9.5)
num
[12, 74, 82, 29, 9.5]

-- add boolean value

num.append(true)
Traceback (most recent call last):
  File "<pyshell#73>", line 1, in <module>
    num.append(true)
NameError: name 'true' is not defined. Did you mean: 'True'?

num.append[True]
Traceback (most recent call last):
  File "<pyshell#74>", line 1, in <module>
    num.append[True]
TypeError: 'builtin_function_or_method' object is not subscriptable

num.append(True)
num
[12, 74, 82, 29, 9.5, True]

-- add string value

num.append('ram')
num
[12, 74, 82, 29, 9.5, True, 'ram']

ex:
-- Insert: add input in particular given value

fruits=['apple','mango','orange']
fruits
['apple', 'mango', 'orange']
fruits.insert(1,'grapes')
fruits
['apple', 'grapes', 'mango', 'orange']

-- add multiple inputs values then we use extend

fruits.extend(['cherry','banana','pineapple'])
fruits
['apple', 'grapes', 'mango', 'orange', 'cherry', 'banana', 'pineapple']

-- replace It will replace value and it will take before value like(1,3 but it changes upto 2 )
ex:

fruits=['apple','mango','orange']
fruits
['apple', 'mango', 'orange']
fruits[1]='kiwi'
fruits
['apple', 'kiwi', 'orange']

fruits.extend(['banana','grapes'])
fruits
['apple', 'kiwi', 'orange', 'banana', 'grapes']
fruits[1:2]=['cherry','pineapple']
fruits
['apple', 'cherry', 'pineapple', 'orange', 'banana', 'grapes']
fruits[1:3]=['berry','watermelon']
fruits
['apple', 'berry', 'watermelon', 'orange', 'banana', 'grapes']

--remove

fruits=['apple', 'berry', 'watermelon', 'orange', 'banana']
fruits
['apple', 'berry', 'watermelon', 'orange', 'banana']

fruits.remove('berry')
              
fruits
              
['apple', 'watermelon', 'orange', 'banana']

--want to remove items by using array numbers

fruits.pop(2)
              
'orange'
fruits
	 
['apple', 'watermelon', 'banana']

(or)

del fruits[1]
              
fruits
              
['apple', 'banana']

--remove all items

fruits.clear()
              
fruits
              
[]


--sorting (ascending and descending order)

fruits=['apple','Berry','Watermelon','orange','banana']
              
fruits.sort()
              
fruits
              
['Berry', 'Watermelon', 'apple', 'banana', 'orange']
here capital comes first so we need to change

fruits[0:2]=['berry','watermelon']
              
fruits.sort()
              
fruits
              
['apple', 'banana', 'berry', 'orange', 'watermelon']

--reverse
fruits.reverse()
              
fruits
              
['watermelon', 'orange', 'berry', 'banana', 'apple']
(or)
fruits.sort(reverse=True)
    fruits             
['watermelon', 'orange', 'berry', 'banana', 'apple']

-------------------------------------
num=[96,37,8,73,7,77,11,22]
              
num
              
[96, 37, 8, 73, 7, 77, 11, 22]
num.sort()
              
num
              
[7, 8, 11, 22, 37, 73, 77, 96]
num.sort(reverse=True)
              
num
              
[96, 77, 73, 37, 22, 11, 8, 7]

now we take marks and check min and max num..
marks=[96, 37, 8, 73, 7, 77, 11, 22]
              
marks
              
[96, 37, 8, 73, 7, 77, 11, 22]
min(marks)
              
7
max(marks)
              
96



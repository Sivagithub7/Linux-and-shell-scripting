DB SECURITY:
============
1. AUTHENTICATION
2. AUTHORIZATION

1. AUTHENTICATION:
==================
- TO CHECK / VERIFY USER CREDENTIALS(USERNAME & PASSWORD) BEFORE
LOGIN / CONNECT TO SYSTEM / DB SERVER.
- THESE USERNAME & PASSWORD ARE CREATED BY DBA ONLY.

HOW TO CREATE A NEW USERNAME & PASSWORD:
============================================
SYNTAX:
=======
CREATE USER <USERNAME> IDENTIFIED BY <PASSWORD>;
EX:
CREATE USER U1 IDENTIFIED BY U1;

2. AUTHORIZATION:
==================
- TO GIVE PERMISSION TO USER TO PERFORM SOME OPERATIONS OVER DB.
- THESE AUTHORIZATION PERMISSIONS ARE ALSO GIVING BY DBA ONLY.
- BY USING "DCL" COMMANDS,
1. GRANT
2. REVOKE

1. GRANT:
=========
- THIS COMMAND IS USED TO GRANTING PERMISSIONS TO USER.

SYNTAX:
=======
GRANT <PRIVILEGE NAME> TO <USER>;

2. REVOKE:
=========
- THIS COMMAND IS USED TO CANCEL PERMISSION OF USER.

SYNTAX:
=======
REVOKE <PRIVILEGE NAME> FROM <USER>;

PRIVILEGES:
===========
- ORACLE DB SERVER SUPPORTING THE FOLLOWING TWO TYPES OF
PRIVILEGES ARE,
1) SYSTEM PRIVILEGES
2) OBJECT PRIVILEGES

1) SYSTEM PRIVILEGES:
=====================
- THESE PRIVILEGES ARE GIVING BY DBA ONLY.
- SYSTEM PRIVILEGES ARE ''CONNECT,UNLIMITED TABLESPACE,CREATE TABLE,
CREATE SYNONYM,CREATE VIEW,CREATE SEQUENCE,CREATE PROCEDURE,.......ETC.
SYNTAX:
========
GRANT <SYSTEM PRIVILEGE NAME> TO <USER NAME>;
EX:
SQL> CONN SYSTEM/TIGER
SQL> CREATE USER U1 IDENTIFIED BY U1;
SQL> CONN U1/U1
ERROR:
ORA-01045: user U1 lacks CREATE SESSION privilege; logon denied
SQL> CONN SYSTEM /TIGER
SQL> GRANT CONNECT TO U1;
SQL> CONN U1/U1
CONNECTED.
SQL> CREATE TABLE TEST1(SNO INT,NAME VARCHAR2(10);
ERROR at line 1:
ORA-01031: insufficient privileges
SQL> CONN SYSTEM/TIGER
SQL> GRANT CREATE TABLE TO U1;
SQL> CONN U1/U1
SQL> CREATE TABLE TEST1(SNO INT,NAME VARCHAR2(10);
SQL> INSERT INTO TEST1 VALUES(101,'SMITH');
ERROR at line 1:
ORA-01950: no privileges on tablespace 'USERS'
SQL> CONN SYSTEM/TIGER
SQL> GRANT UNLIMITED TABLESPACE TO U1;
SQL> CONN U1/U1;
SQL> INSERT INTO TEST1 VALUES(101,'SMITH');
SQL> UPDATE TEST1 SET SNO=1 WHERE SNO=101;
SQL> DELETE FROM TEST1 WHERE SNO=1;
2) OBJECT PRIVILEGES:
====================
- THESE PRIVILEGES ARE GIVING BY DBA AND ALSO USER.
- OBJECT PRIVILEGES ARE 4 TYPES:
- INSERT,UPDATE,SELECT,DELETE (OR) "ALL" KEYWORD.
SYNTAX:
========
GRANT <OBJECT PRIVILEGE NAME> ON <TABLE NAME / OBJECT NAME> TO <USER>;
CASE-1: DBA TO USER:
===================
SQL> CONN U1/U1
SQL> SELECT * FROM DEPT;------------------------ERROR
SQL> SELECT * FROM SYSTEM.DEPT;---------ERROR
SQL> CONN SYSTEM/TIGER
SQL> GRANT SELECT ON DEPT TO U1;
SQL> CONN U1/U1
SQL> SELECT * FROM SYSTEM.DEPT;------ALLOWED
SQL> INSERT INTO SYSTEM.DEPT VALUES(50,'DBA','HYD');
ERROR at line 1:
ORA-01031: insufficient privileges
SQL> UPDATE SYSTEM.DEPT SET LOC='PUNE' WHERE DEPTNO=30;
ERROR at line 1:
ORA-01031: insufficient privileges
SQL> DELETE FROM SYSTEM.DEPT WHERE DEPTNO=10;
ERROR at line 1:
ORA-01031: insufficient privileges
SQL> CONN SYSTEM/TIGER
SQL> GRANT INSERT,UPDATE,DELETE ON DEPT TO U1;
SQL> CONN U1/U1
SQL> INSERT INTO SYSTEM.DEPT VALUES(50,'DBA','HYD');------ALLOWED
SQL> UPDATE SYSTEM.DEPT SET LOC='PUNE' WHERE DEPTNO=30;-----ALLOWED
SQL> DELETE FROM SYSTEM.DEPT WHERE DEPTNO=10;-----ALLOWED
HOW TO CANCEL ALL OBJECT PRIVILEGES OF USER U1:
================================================
EX:
SQL> CONN SYSTEM/TIGER
SQL> REVOKE ALL ON DEPT FROM U1;
SQL> CONN U1/U1
SQL> SELECT * FROM SYSTEM.DEPT;------ERROR
CASE-2: USER TO USER:
=====================
- WHENEVER USER U11 WANT TO GIVE OBJECT PRIVILEGES TO ANOTHER
USER
U12 FIRST USER U11 MUST TAKE GRANT PERMISSION FROM DBA ALONG WITH "WITH
GRANT OPTION" STATEMENT THEN ONLY USER U11 CAN GIVE OBJECT PRIVILEGES TO
ANOTHER USER U12.
SYNTAX:
========
GRANT <OBJECT PRIVILEGE NAME> ON <TN> TO <USER> WITH GRANT OPTION;
EX:
SQL> CONN SYSTEM/TIGER
SQL> CREATE USER U11 IDENTIFIED BY U11;
SQL> CREATE USER U12 IDENTIFIED BY U12;
SQL> GRANT CONNECT TO U11,U12;
SQL> CONN U11/U11
SQL> SELECT * FROM SYSTEM.DEPT;------ERROR
SQL> CONN U12/U12
SQL> SELECT * FROM SYSTEM.DEPT;------ERROR
SQL> CONN SYSTEM/TIGER
SQL> GRANT SELECT ON DEPT TO U11 WITH GRANT OPTION;
SQL> CONN U11/U11
SQL> SELECT * FROM SYSTEM.DEPT;------ALLOWED
SQL> GRANT SELECT ON SYSTEM.DEPT TO U12;-------GRANTED
SQL> CONN U12/U12
SQL> SELECT * FROM SYSTEM.DEPT;-------ALLOWED
ROLE:
=====
- IT IS COLLECTION OF PRIVILEGES(SYSTEM/OBJECT).THESE ROLES ARE
CREATED BY DBA ONLY.
X - PROJECT
|
GROUP OF EMP s
( E1,E2,E3,E4,E5,E6,E7,E8,E9,E10)
|
E1,E3,E5,E10( CONNECT,CREATE TABLE,UNLIMITED TABELSPACE)
|
DBA
|
ROLE R1 ON(CONNECT,CREATE TABLE,UNLIMITED TABELSPACE)
|
GRANT R1 TO E1,E3,E5,E10
HOW TO CREATE A ROLE:
======================
STEP1: CREATE A ROLE:
=====================
SYNTAX:
=======
CREATE ROLE <ROLE NAME>;
STEP2: ASSIGNING PRIVILEGES TO ROLE:
=====================================
SYNTAX:
========
GRANT <PRIVILEGES> TO <ROLE NAME>;
STEP3: ASSIGNING A ROLE TO USERS:
=================================
SYNTAX:
=======
GRANT <ROLE NAME> TO <USERS>;
EX:
SQL> CONN SYSTEM/TIGER
SQL> CREATE USER E1 IDENTIFIED BY E1;
SQL> CREATE USER E2 IDENTIFIED BY E2;
SQL> CONN E1/E1
ERROR
SQL> CONN E2/E2
ERROR
SQL> CONN SYSTEM/TIGER
SQL> CREATE ROLE R1;
SQL> GRANT CONNECT,CREATE TABLE TO R1;
SQL> GRANT R1 TO E1,E2;
SQL> CONN E1/E1
SQL> CREATE TABLE T1(SNO INT);
SQL> CONN E2/E2
SQL> CREATE TABLE T1(SNO INT);


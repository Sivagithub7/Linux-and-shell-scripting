CLUSTER:
=========
- IT IS A DB OBJECT WHICH CONTAIN THE GROUP OF TABLES TOGETHER TO
SHARE SAME DATABLOCK MEMORY.
- ARE CREATED TO IMPROVE THE PERFORMANCE OF JOINS.
- WHEN WE CREATED CLUSTER TABLES THEN WE MUST HAVE A COMMON
COLUMN NAME IN TABLES AND THIS COMMON COLUMN NAME IS CALLED AS
"CLUSTERED
KEY" COLUMN.
- THESE CLUSTER TABLES ARE CREATED AT THE TIME OF CREATING TABLES.
- WHEN WE CLUSTERS THEN WE FOLLOW THE FOLLOWING 3 STEPS
MECHANISM,
STEP1: CREATE CLUSTER MEMORY:
===============================
SYNTAX:
========
CREATE CLUSTER <CLUSTER NAME>(<COMMON COLUMN NAME> <DT>[SIZE]);
STEP2: CREATE INDEX ON CLUSTER:
===============================
SYNTAX:
========
CREATE INDEX <INDEX NAME> ON CLUSTER <CLUSTER NAME>;
STEP3: CREATE CLUSTER TABLES:
=============================
SYNTAX:
========
CREATE TABLE <TN>(<COLUMN NAME1> <DATATYPE>[SIZE]>,........................................)
CLUSTER <CLUSTER NAME>(COMMON COLUMN NAME);
EX:
SQL> CREATE CLUSTER EMP_DEPT(DEPTNO INT);
Cluster created.
SQL> CREATE INDEX CI ON CLUSTER EMP_DEPT;
Index created.
SQL> CREATE TABLE EMP1(EID INT,ENAME VARCHAR2(10),
DEPTNO INT)CLUSTER EMP_DEPT(DEPTNO);
SQL> CREATE TABLE DEPT1(DEPTNO INT,DNAME VARCHAR2(10))
CLUSTER EMP_DEPT(DEPTNO);
Tables created.
SQL> INSERT INTO EMP1 VALUES(1,'SMITH',10);
SQL> INSERT INTO EMP1 VALUES(2,'JONES',20);
SQL> COMMIT;
SQL> INSERT INTO DEPT1 VALUES(10,'D1');
SQL> INSERT INTO DEPT1 VALUES(20,'D2');
SQL> COMMIT;
SQL> SELECT * FROM EMP1;
EID ENAME DEPTNO
---------- ---------- ----------
1 SMITH 10
2 JONES 20
SQL> SELECT * FROM DEPT1;
DEPTNO DNAME
---------- ----------
10 D1
20 D2
NOTE:
=====
- IF WE WANT CHECK THESE TABLES ARE CLUSTERED OR NOT THEN WE
CHECK
ROWID's OF THESE TABLES.IF BOTH TABLES ROWID's ARE SAME THEN THESE ARE
UNDER
CLUSTERED OTHERWISE NON-CLUSTERED TABLES.
EX:
SQL> SELECT ROWID FROM EMP1;
ROWID
------------------
AAASR2AAHAAAAf8AAA
AAASR2AAHAAAAf9AAA
SQL> SELECT ROWID FROM DEPT1;
ROWID
------------------
AAASR2AAHAAAAf8AAA
AAASR2AAHAAAAf9AAA
NOTE:
======
- TO VIEW ALL CLUSTER OBJECTS IN ORACLE DB THEN WE USE A
DATADICTIONARY IS "USER_CLUSTERS".
EX:
SQL> DESC USER_CLUSTERS;
SQL> SELECT CLUSTER_NAME FROM USER_CLUSTERS;
CLUSTER_NAME
---------------------------------
EMP_DEPT
NOTE:
======
- TO VIEW CLUSTERED TABLES IN A CLUSTER MEMORY THEN WE USE
A DATADICTIONARY IS "USER_TABLES".
EX:
SQL> DESC USER_TABLES;
SQL> SELECT TABLE_NAME FROM USER_TABLES
WHERE CLUSTER_NAME='EMP_DEPT';
TABLE_NAME
------------------------------------------
EMP1
DEPT1
HOW TO DROP A CLUSTER:
=======================
SYNTAX:
========
DROP CLUSTER <CLUSTER NAME> INCLUDING TABLES;
EX:
SQL> DROP CLUSTER EMP_DEPT INCLUDING TABLES
OPERATORS
==========

- Used to express the conditions in select statement.


SQL> select * from hyd;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith             2.5

1) Arithmatic ( +, -, /, %, * )

>> + ==> BEFORE

EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith            8500
	  
SQL> update hyd set sal=sal+1000 where eid=1010;

AFTER

SQL> select * from hyd;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith            9500
	  
>> - ==> BEFORE

     EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith            9500
	  
SQL> update hyd set sal=sal-2000 where eid=1010;
	
	AFTER
	
SQL> select * from hyd;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith            7500

>> * ==> BEFORE

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith            7500
	  
SQL> update hyd set sal=sal*2 where eid=1010;

 AFTER
 
 SQL> select * from hyd;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith           15000
	  
>> / ==> BEFORE

      EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith           15000
	  
SQL> update hyd set sal=sal/2000 where eid=1010;

 AFTER

SQL> select * from hyd;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith             2.5
	  
>> % ==> SELECT 17 % 5;

Result:
Number of Records: 1
17 % 5
2

> Assignment OPERATOR:

=	Equal to

	SQL> select * from hyd where eid=1021;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
	  
> Relational operator:

>	Greater than
	
	SQL> select * from hyd where sal>5000;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
	  
	  
<	Less than	
    
	SQL> select * from hyd where sal<5000;

       EID ENAME             SAL
---------- ---------- ----------
      1023 ward             2500
      1010 smith             2.5


>=	Greater than or equal to

    SQL> select * from hyd where sal>=5000;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
	  
	  
<=	Less than or equal to

    SQL> select * from hyd where sal<=5000;

       EID ENAME             SAL
---------- ---------- ----------
      1023 ward             2500
      1010 smith             2.5

	  
<>	Not equal to ( != or ^= or <> )

    SQL> select * from hyd where sal<>2.5;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
	  
>> Logical operator:

> AND: 

SQL> select * from hyd where eid=1021 AND ename='smith';

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
	  
	  
SQL> select * from hyd where eid=1021 AND ename='ward';

no rows selected

> OR :	

 SQL> select * from hyd where eid=1021 or ename='ward';

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1023 ward             2500

SQL> select * from hyd where eid=1021 or ename='smith';

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1010 smith             2.5

SQL> select * from hyd where eid=1022 or ename='ward';

       EID ENAME             SAL
---------- ---------- ----------
      1022 allen            6500
      1023 ward             2500

SQL> select * from hyd where eid=1022 or ename='alex';

       EID ENAME             SAL
---------- ---------- ----------
      1022 allen            6500

> NOT :

sql> select empno,ename,job,sal,deptno from emp where not job='CLERK' and deptno=20;
 EMPNO ENAME      JOB              SAL     DEPTNO
---------- ---------- --------- ---------- ----------
      7566 JONES      MANAGER         5500         20
      7788 SCOTT      ANALYST         3000         20
      7902 FORD       ANALYST         3000         20

>> special operator:

> In OPERATOR: Returns true if value is available in given list of values.

EX:

SQL> select * from hyd;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500
      1023 ward             2500
      1010 smith             2.5

SQL> select * from hyd where eid in(1021,1022);

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1022 allen            6500

SQL> select * from hyd where eid in(1021,102);

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
	  
> Not in operator: not in operator is quite opposite to ‘IN’ clause.

EX:

SQL> select * from hyd where eid not in(1021,1022);

       EID ENAME             SAL
---------- ---------- ----------
      1023 ward             2500
      1010 smith             2.5

SQL> select * from hyd where eid not in(1021,102);

       EID ENAME             SAL
---------- ---------- ----------
      1022 allen            6500
      1023 ward             2500
      1010 smith             2.5
	  
> BETWEEN Operator: Returns true if value specified is within the specified range.

EX:


SQL> select * from hyd where sal between 5000 and 7000;

       EID ENAME             SAL
---------- ---------- ----------
      1022 allen            6500
	  
> Not BETWEEN operator: opposite to between operator.

EX:

SQL> select * from hyd where sal not between 5000 and 7000;

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1023 ward             2500
      1010 smith             2.5
	  
> LIKE operator: Used to search for specific pattern in a given input.

EX: 

SQL> select * from hyd where ename like 's%';

       EID ENAME             SAL
---------- ---------- ----------
      1021 smith            8500
      1010 smith             2.5

SQL> select * from hyd where ename like '%d';

       EID ENAME             SAL
---------- ---------- ----------
      1023 ward             2500

SQL> select * from hyd where ename like '%r%';

       EID ENAME             SAL
---------- ---------- ----------
      1023 ward             2500
	  
> null operator:

select * from hyd where sal is null;

o/p - empty all are come.

> Not null operator:

select * from hyd where sal is not null;

o/p - only null values comes.
	  
> Like operator with special char s:

EX: 

/* WHOSE EMPLOYEE NAME IS HAVING "#" CHAR?
SELECT * FROM EMP77 WHERE ENAME LIKE '%#%';
EX: WHOSE EMPLOYEE NAME IS HAVING "@" CHAR?
SELECT * FROM EMP77 WHERE ENAME LIKE '%@%';
EX: WHOSE EMPLOYEE NAME IS HAVING "_" CHAR?
SELECT * FROM EMP77 WHERE ENAME LIKE '%\_%'ESCAPE '\'; EX:
WHOSE EMPLOYEE NAME IS HAVING "%" CHAR?
SELECT * FROM EMP77 WHERE ENAME LIKE '%\%%'ESCAPE '\'; NOTE:
Generally oracle db server will treat these symbol(%, _ ) as "wildcard operators"
but not "special char’s”. To overcome this problem we must use a pre-defined statement
is "escape '\' " .

Not like operator: -
syntax:-
seleclt *from <table Name>
where <character data type column> not like ‘<value>’;
Display the employees whose name is not ends with ‘S’ in EMP table? Sql>
SELECT *FROM emp WHERE ename NOT LIKE '%S'; */

>> set operator:
> UNION 	> Unionall	> INTERSECT   > minus

> Union :  It prints all the values from different tables except duplicate values.

EX : 

SQL> SELECT * FROM HYD;

       EID ENAME             SAL JOB
---------- ---------- ---------- ----------
      1021 smith            8500 CLERK
      1022 allen            6500 ANALIST
      1023 ward             2500 MANAGER
      1010 smith             2.5 CLERK
	  
SQL> SELECT * FROM CHE;

       EID ENAME             SAL JOB
---------- ---------- ---------- ----------
      1021 smith            8500 CLERK
      1020 miller           7800 ANALIST
      1025 jones           25000 MANAGER
	  
SQL> SELECT * FROM HYD UNION SELECT * FROM CHE;


    EID ENAME             SAL JOB
---------- ---------- ---------- ----------
      1010 smith             2.5 CLERK
      1020 miller           7800 ANALIST
      1021 smith            8500 CLERK
      1022 allen            6500 ANALIST
      1023 ward             2500 MANAGER
      1025 jones           25000 MANAGER
	  
	  it removes duplicate values and displays all the values.
	  
EX:

SQL> SELECT ENAME FROM HYD WHERE JOB='CLERK' UNION SELECT ENAME FROM CHE WHERE JOB='CLERK';

ENAME
----------
smith
	  
> Union all : It displays all the values from different tables with duplicate values.

EX:

SQL> SELECT ENAME FROM HYD WHERE JOB='CLERK' UNION ALL SELECT ENAME FROM CHE WHERE JOB='CLERK';

ENAME
----------
smith
smith
smith

EX:

SQL> SELECT * FROM HYD UNION ALL SELECT * FROM CHE;

       EID ENAME             SAL JOB
---------- ---------- ---------- ----------
      1021 smith            8500 CLERK
      1022 allen            6500 ANALIST
      1023 ward             2500 MANAGER
      1010 smith             2.5 CLERK
      1021 smith            8500 CLERK
      1020 miller           7800 ANALIST
      1025 jones           25000 MANAGER
	  
> Itersect: It displays common data from different tables.

EX:

SQL> SELECT * FROM HYD INTERSECT SELECT * FROM CHE;

       EID ENAME             SAL JOB
---------- ---------- ---------- ----------
      1021 smith            8500 CLERK


EX:

SQL> SELECT ENAME,EID FROM HYD WHERE JOB='CLERK' INTERSECT SELECT ENAME,EID FROM CHE WHERE JOB='CLERK';

ENAME             EID
---------- ----------
smith            1021

> minus : It displays uncommon data from different tables.

EX: 

SQL> SELECT ENAME,EID FROM HYD WHERE JOB='CLERK' minus SELECT ENAME,EID FROM CHE WHERE JOB='CLERK';

ENAME             EID
---------- ----------
smith            1010

EX:

SQL> SELECT * FROM HYD MINUS SELECT * FROM CHE;

       EID ENAME             SAL JOB
---------- ---------- ---------- ----------
      1010 smith             2.5 CLERK
      1022 allen            6500 ANALIST
      1023 ward             2500 MANAGER






 


	  






	  
	  
	  

CLAUSES:
========
- a clause is nothing but a statement which is used to add
to sql query for providing some facilities like "filtering rows,
sorting values,grouping a similar data,finding sub total and
grand total" based on columns automatically.

> where
> order by
> group by
> having
> rollup
> cube

TABLE:

SQL> SELECT * FROM EMP;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800
                   20
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300          30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500          30
      7566 JONES      MANAGER         7839 02-APR-81       5500
                   20
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400          30
      7698 BLAKE      MANAGER         7839 01-MAY-81       5500
                   30
      7782 CLARK      MANAGER         7839 09-JUN-81       5500       1200          10
      7788 SCOTT      ANALYST         7566 09-DEC-82       3000
                   20
      7839 KING       PRESIDENT            17-NOV-81       5000       1200          10
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500
         0         30
      7876 ADAMS      CLERK           7788 12-JAN-83       1100
                   20

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7900 JAMES      CLERK           7698 03-DEC-81        950
                   30
      7902 FORD       ANALYST         7566 03-DEC-81       3000
                   20
      7934 MILLER     CLERK           7782 23-JAN-82       1300       1200          10

14 rows selected.


> where:
======
- to filtering rows before grouping data in a table.
- can apply on "select,update,delete" commands only.

EX:

SQL> select * from emp where empno=7788;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7788 SCOTT      ANALYST         7566 09-DEC-82       3000
                   20
				  
> order by:
=========
- is used to sorting a specific column values either
in ascending or descending order.
- by default is "ascending order".
- if we want to make the values in descending order then
we use a keyword is "desc".
- can use in "select command" only.

EX:

SQL> SELECT SAL FROM EMP ORDER BY SAL;

       SAL
----------
       800
       950
      1100
      1250
      1250
      1300
      1500
      1600
      3000
      3000
      5000

       SAL
----------
      5500
      5500
      5500

14 rows selected.

SQL> SELECT SAL FROM EMP ORDER BY SAL DESC;

       SAL
----------
      5500
      5500
      5500
      5000
      3000
      3000
      1600
      1500
      1300
      1250
      1250

       SAL
----------
      1100
       950
	   
SQL> SELECT ENAME FROM EMP ORDER BY ENAME DESC;

ENAME
----------
WARD
TURNER
SMITH
SCOTT
MILLER
MARTIN
KING
JONES
JAMES
FORD
CLARK

- - NOTE:
=====
- order by clause can apply on not only column names even though we can apply the position of columns in a
select query.

SQL>  SELECT EMPNO,ENAME,SAL FROM EMP ORDER BY 3;

     EMPNO ENAME             SAL
---------- ---------- ----------
      7369 SMITH             800
      7900 JAMES             950
      7876 ADAMS            1100
      7521 WARD             1250
      7654 MARTIN           1250
      7934 MILLER           1300
      7844 TURNER           1500
      7499 ALLEN            1600
      7902 FORD             3000
      7788 SCOTT            3000
      7839 KING             5000

SQL> SELECT SAL FROM EMP ORDER BY 1 DESC;

       SAL
----------
      5500
      5500
      5500
      5000
      3000
      3000
      1600
      1500
      1300
      1250
      1250

       SAL
----------
      1100
       950
       800
	   
SQL> SELECT EMPNO,ENAME,SAL FROM EMP ORDER BY 4;
SELECT EMPNO,ENAME,SAL FROM EMP ORDER BY 4
                                         *
ERROR at line 1:
ORA-01785: ORDER BY item must be the number of a SELECT-list expression

WORKING WITH "NULL" CLAUSES:
============================
- there are two null clauses are,
1. nulls first:
==============
- by default in ascending oreder:
first: values
later: nulls

EX:
SQL> SELECT * FROM EMP ORDER BY COMM;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7782 CLARK      MANAGER         7839 09-JUN-81       5500       1200         10
      7839 KING       PRESIDENT            17-NOV-81       5000       1200         10
      7934 MILLER     CLERK           7782 23-JAN-82       1300       1200         10
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7788 SCOTT      ANALYST         7566 09-DEC-82       3000                    20
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7876 ADAMS      CLERK           7788 12-JAN-83       1100                    20
      7698 BLAKE      MANAGER         7839 01-MAY-81       5500                    30
      7566 JONES      MANAGER         7839 02-APR-81       5500                    20

14 rows selected.

SQL> SELECT * FROM EMP ORDER BY COMM NULLS FIRST;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7876 ADAMS      CLERK           7788 12-JAN-83       1100                    20
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7788 SCOTT      ANALYST         7566 09-DEC-82       3000                    20
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7566 JONES      MANAGER         7839 02-APR-81       5500                    20
      7698 BLAKE      MANAGER         7839 01-MAY-81       5500                    30
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7839 KING       PRESIDENT            17-NOV-81       5000       1200         10

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7934 MILLER     CLERK           7782 23-JAN-82       1300       1200         10
      7782 CLARK      MANAGER         7839 09-JUN-81       5500       1200         10
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
	  
2. nulls last:
==============
- by default in descending oreder:
first: nulls
later: values

EX:

SQL> SELECT * FROM EMP ORDER BY COMM NULLS LAST;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7782 CLARK      MANAGER         7839 09-JUN-81       5500       1200         10
      7839 KING       PRESIDENT            17-NOV-81       5000       1200         10
      7934 MILLER     CLERK           7782 23-JAN-82       1300       1200         10
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7788 SCOTT      ANALYST         7566 09-DEC-82       3000                    20
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7876 ADAMS      CLERK           7788 12-JAN-83       1100                    20
      7698 BLAKE      MANAGER         7839 01-MAY-81       5500                    30
      7566 JONES      MANAGER         7839 02-APR-81       5500                    20

14 rows selected.

SQL> SELECT * FROM EMP ORDER BY COMM DESC;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7876 ADAMS      CLERK           7788 12-JAN-83       1100                    20
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7566 JONES      MANAGER         7839 02-APR-81       5500                    20
      7698 BLAKE      MANAGER         7839 01-MAY-81       5500                    30
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7788 SCOTT      ANALYST         7566 09-DEC-82       3000                    20
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7839 KING       PRESIDENT            17-NOV-81       5000       1200         10
      7934 MILLER     CLERK           7782 23-JAN-82       1300       1200         10
      7782 CLARK      MANAGER         7839 09-JUN-81       5500       1200         10

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30


> GROUP BY:
=========
- is used to divide a similar data into groups.
- when we use "group by" clause we must use "grouping
functions / aggregative functions" to get the final result.
- count(),sum(),avg(),min(),max().

TABLE:
SQL> SELECT * FROM HYD;

       EID ENAME             SAL JOB        GENDER
---------- ---------- ---------- ---------- ----------
      1021 smith            8500 CLERK      M
      1022 allen            6500 ANALIST    F
      1023 ward             2500 MANAGER    F
      1010 smith             2.5 CLERK      M
	  
SQL> SELECT GENDER,COUNT(GENDER) FROM HYD GROUP BY GENDER;

GENDER     COUNT(GENDER)
---------- -------------
M                      2
F                      2

> HAVING:
=======
- filtering rows after grouping data in a table.
- it can use along with "group by" clause.

EX:

SQL> SELECT JOB,COUNT(JOB) FROM HYD  GROUP BY JOB HAVING COUNT(JOB)>1;

JOB        COUNT(JOB)
---------- ----------
CLERK               2

SQL> SELECT EID,SUM(SAL) FROM HYD GROUP BY EID HAVING SUM(SAL)<7000;

       EID   SUM(SAL)
---------- ----------
      1022       6500
      1023       2500
      1010        2.5
	  
> USING ALL CLAUSES IN A SINGLE SELECT STATEMENT:
===============================================
syntax:
=======
select <column name1>,<column name2>,...................,
<grouping function name1>,<grouing function name2>,......
from <tn>
[where <filtering condition>
group by <column name1>,<column name2>,......
having <filtering condition>
order by <column name1> <asc/desc>,.........
];

SQL> SELECT DEPTNO,COUNT(DEPTNO) FROM EMP WHERE SAL>1000 GROUP BY DEPTNO HAVING COUNT(DEPTNO)>3 ORDER BY DEPTNO DESC;

    DEPTNO COUNT(DEPTNO)
---------- -------------
        30             5
        20             4
		
> ROLLUP & CUBE:
==============
- to find out sub total & grand total.
- these clauses are working with "group by" only.
> rollup : to find sub & grand based on a single column.
> cube : to find sub & grand based on multiple columns.

EX:

rollup with single column:
======================
SQL> SELECT DEPTNO,COUNT(DEPTNO) FROM EMP GROUP BY ROLLUP(DEPTNO);

    DEPTNO COUNT(DEPTNO)
---------- -------------
        10             3
        20             5
        30             6
                      14
					  
rollup with multiple columns:
===========================
SQL> SELECT DEPTNO,JOB,COUNT(DEPTNO) FROM EMP GROUP BY ROLLUP(DEPTNO,JOB);

    DEPTNO JOB       COUNT(DEPTNO)
---------- --------- -------------
        10 CLERK                 1
        10 MANAGER               1
        10 PRESIDENT             1
        10                       3
        20 CLERK                 2
        20 ANALYST               2
        20 MANAGER               1
        20                       5
        30 CLERK                 1
        30 MANAGER               1
        30 SALESMAN              4

    DEPTNO JOB       COUNT(DEPTNO)
---------- --------- -------------
        30                       6
                                14
> CUBE:
==================
select <column name1>,<column name2>,...................,
<grouping function name1>,<grouing function name2>,......
from <tn> group by cube(<column name1>,<column name2>,...);

EX:

cube with single column:
========================

SQL> SELECT DEPTNO,COUNT(JOB) FROM EMP GROUP BY CUBE(DEPTNO);

    DEPTNO COUNT(JOB)
---------- ----------
                   14
        10          3
        20          5
        30          6
		
cube with multiple columns:
============================
								
SQL> SELECT JOB,DEPTNO,COUNT(JOB) FROM EMP
  2  GROUP BY CUBE(JOB,DEPTNO) ORDER BY DEPTNO;

JOB           DEPTNO COUNT(JOB)
--------- ---------- ----------
CLERK             10          1
MANAGER           10          1
PRESIDENT         10          1
                  10          3
ANALYST           20          2
CLERK             20          2
MANAGER           20          1
                  20          5
CLERK             30          1
MANAGER           30          1
SALESMAN          30          4

JOB           DEPTNO COUNT(JOB)
--------- ---------- ----------
                  30          6
ANALYST                       2
CLERK                         4
MANAGER                       3
PRESIDENT                     1
SALESMAN                      4
                             14

18 rows selected.
